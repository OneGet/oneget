# Copyright (C) 2014 Microsoft Corporation

###
### PackageManagement/sources
###

!include ..\common.inc

TARGETNAME          = Microsoft.PackageManagement
TARGETTYPE          = DYNLINK

## !include $(PROJECT_ROOT)\monad\nttargets\build\sources.inc
OUTPUT_PATH=$(OBJ_PATH)\$(O)

SOURCES_PATH = .\

###
### Note: This really only works if you have a single .resx file.
###       if an additional .resx file is added at some point in the future
###       you have to either *always* pre-gen the .cs files or figure another
###       way.
###
RESOURCES_NAMESPACE=Microsoft.PackageManagement.Resources
GENERATED_RESOURCES_SOURCE=$(OUTPUT_PATH)\Messages.cs
RESGEN_FLAGS = /str:cs,$(RESOURCES_NAMESPACE),Messages,$(OUTPUT_PATH)\Messages.cs

### The resources that we want to include in the project
RESGEN_SOURCES=\
    Resources\Messages.resx,$(OUTPUT_PATH)\$(RESOURCES_NAMESPACE).Messages.resources

### Note: I'm not entirely sure if the base resources are supposed to be
###       LANGUAGE_SPECIFIC_MANAGED_RESOURCES =
###       or
###       LANGUAGE_NEUTRAL_MANAGED_RESOURCES =
###       so I've left it as SPECIFIC..

LANGUAGE_SPECIFIC_MANAGED_RESOURCES =\
    $(OUTPUT_PATH)\$(RESOURCES_NAMESPACE).Messages.resources,$(RESOURCES_NAMESPACE).Messages.resources

PASS2_BINPLACE=\
    $(OUTPUT_PATH)\$(TARGETNAME).resources.dll

### Referenced assemblies

REFERENCES=\
	$(CLR_REF_PATH)\System.metadata_dll; \
	$(CLR_REF_PATH)\System.Core.metadata_dll; \
	$(CLR_REF_PATH)\System.Runtime.Remoting.metadata_dll; \
    $(CLR_REF_PATH)\System.Security.metadata_dll; \
	$(CLR_REF_PATH)\System.Xml.metadata_dll; \
	$(CLR_REF_PATH)\System.Xml.Linq.metadata_dll;

#region sourcefiles
SOURCES=\
	Api\ICoreApi.cs \
 	Api\IHostAPI.cs \
 	Api\IProviderServices.cs \
 	Api\IRequest.cs \
 	Api\IResponseApi.cs \
 	Implementation\ActionRequestObject.cs \
 	Implementation\Archiver.cs \
 	Implementation\DictionaryRequestObject.cs \
 	Implementation\Downloader.cs \
 	Implementation\DynamicOptionRequestObject.cs \
 	Implementation\EnumerableRequestObject.cs \
 	Implementation\Extensions.cs \
 	Implementation\FuncRequestObject.cs \
 	Implementation\PackageDetailsRequestObject.cs \
 	Implementation\PackageManagementService.cs \
 	Implementation\PackageProvider.cs \
 	Implementation\PackageSourceRequestObject.cs \
 	Implementation\ProviderBase.cs \
 	Implementation\ProviderServicesImpl.cs \
 	Implementation\Request.cs \
 	Implementation\RequestObject.cs \
 	Implementation\SoftwareIdentityRequestObject.cs \
 	Packaging\AttributeIndexer.cs \
 	Packaging\BaseElement.cs \
 	Packaging\Directory.cs \
 	Packaging\DynamicOption.cs \
 	Packaging\Entity.cs \
 	Packaging\Evidence.cs \
 	Packaging\File.cs \
 	Packaging\FilesystemItem.cs \
 	Packaging\Iso19770_2.cs \
 	Packaging\Link.cs \
 	Packaging\MediaQuery.cs \
 	Packaging\Meta.cs \
 	Packaging\MetadataIndexer.cs \
 	Packaging\OptionCategory.cs \
 	Packaging\OptionType.cs \
 	Packaging\PackageSource.cs \
 	Packaging\Payload.cs \
 	Packaging\Process.cs \
 	Packaging\Resource.cs \
 	Packaging\ResourceCollection.cs \
 	Packaging\SoftwareIdentity.cs \
 	Packaging\SoftwareIdentityVersionComparer.cs \
 	Packaging\SoftwareMetadata.cs \
 	Packaging\Swidtag.cs \
 	Providers\IArchiver.cs \
 	Providers\IDownloader.cs \
 	Providers\IMetaProvider.cs \
 	Providers\IPackageProvider.cs \
 	Providers\IProvider.cs \
 	Utility\Async\AsyncAction.cs \
 	Utility\Async\AsyncActionExtensions.cs \
 	Utility\Async\EmptyAsyncEnumerable.cs \
 	Utility\Async\IAsyncAction.cs \
 	Utility\Async\IAsyncEnumerable.cs \
 	Utility\Async\IAsyncValue.cs \
 	Utility\Collections\BlockingCollection.cs \
 	Utility\Collections\CancellableEnumerator.cs \
 	Utility\Collections\EnumerableExtensions.cs \
 	Utility\Collections\FilenameEqualityComparer.cs \
 	Utility\Collections\ICancellableEnumerator.cs \
 	Utility\Collections\List.cs \
 	Utility\Collections\MutableEnumerable.cs \
 	Utility\Collections\OrderedDictionary.cs \
 	Utility\Collections\PathEqualityComparer.cs \
 	Utility\Collections\ReEnumerable.cs \
 	Utility\Extensions\CollectionExtensions.cs \
 	Utility\Extensions\DelegateExtensions.cs \
 	Utility\Extensions\DictionaryExtensions.cs \
        Utility\Extensions\EqualityComparer.cs \
 	Utility\Extensions\ExceptionExtensions.cs \
 	Utility\Extensions\FilesystemExtensions.cs \
 	Utility\Extensions\HashtableExtensions.cs \
 	Utility\Extensions\Singleon.cs \
 	Utility\Extensions\StringExtensions.cs \
 	Utility\Extensions\TaskExtensions.cs \
 	Utility\Extensions\ThreadPerTaskScheduler.cs \
 	Utility\Extensions\TwoTypes.cs \
 	Utility\Extensions\Types.cs \
 	Utility\Extensions\XmlExtensions.cs \
 	Utility\Platform\AdminPrivilege.cs \
 	Utility\Platform\AsyncProcess.cs \
 	Utility\Platform\Manifest.cs \
 	Utility\Platform\MoveFileFlags.cs \
 	Utility\Platform\NativeMethods.cs \
 	Utility\Platform\WinTrustData.cs \
 	Utility\Platform\WinTrustFileInfo.cs \
 	Utility\Plugin\AssignableTypeComparer.cs \
 	Utility\Plugin\DynamicInterface.cs \
 	Utility\Plugin\DynamicInterfaceExtensions.cs \
 	Utility\Plugin\DynamicType.cs \
 	Utility\Plugin\DynamicTypeExtensions.cs \
 	Utility\Plugin\FluentIlExtensions.cs \
 	Utility\Plugin\RequiredAttribute.cs \
 	Utility\Plugin\WrappedAction.cs \
 	Utility\Plugin\WrappedDelegate.cs \
 	Utility\Plugin\WrappedFunc.cs \
 	Utility\Versions\FourPartVersion.cs \
 	Utility\Versions\TwoPartVersion.cs \
 	Utility\Xml\DynamicAttributes.cs \
 	Utility\Xml\DynamicElement.cs \
 	Utility\Xml\DynamicElementEnumerable.cs \
 	Constants.cs \
 	ErrorCategory.cs \
 	IPackageManagementService.cs \
 	PackageManager.cs \
	$(GENERATED_RESOURCES_SOURCE)

#endregion

INTERNALS_VISIBLE_TO=\
    Microsoft.PowerShell.PackageManagement, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);\
    Microsoft.PackageManagement.Test, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);\
    Microsoft.PackageManagement.MetaProvider.PowerShell, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);\
    Microsoft.PackageManagement.CoreProviders, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);\
    Microsoft.PackageManagement.ArchiverProviders, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);\
    Microsoft.PackageManagement.MsiProvider, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);\
    Microsoft.PackageManagement.MsuProvider, PublicKey=$(WINDOWS_PUBLIC_KEY_STRING);

