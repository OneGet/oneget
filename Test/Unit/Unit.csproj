<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props" Condition="Exists('..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{B953E5C8-ECBB-489E-A5A4-6AC64ABDCB2E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Microsoft.PackageManagement.Test</RootNamespace>
    <AssemblyName>Microsoft.PackageManagement.Test</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition=" '$(SolutionDir)'=='' ">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), solution.props))\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>f80b8cae</NuGetPackageImportStamp>
  </PropertyGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), solution.props))\solution.props" Condition="Exists('$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), solution.props))\solution.props')" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup Condition="$(InternalBuild) == 'true'">
    <Reference Include="Microsoft.PackageManagement">
      <HintPath>..\Microsoft.PackageManagement.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition="$(InternalBuild) != 'true'">
    <Reference Include="Microsoft.PackageManagement">
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Runtime" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Threading.Tasks" />
    <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\xunit.abstractions.2.0.0\lib\net35\xunit.abstractions.dll</HintPath>
    </Reference>
    <Reference Include="xunit.assert, Version=2.0.0.2929, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\xunit.assert.2.0.0\lib\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.assert.dll</HintPath>
    </Reference>
    <Reference Include="xunit.core, Version=2.0.0.2929, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\xunit.extensibility.core.2.0.0\lib\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Core\Packaging\SwidTagTests.cs" />
    <Compile Include="Core\Service\BasePmsServiceTests.cs" />
    <Compile Include="Core\Service\BasicHostImpl.cs" />
    <Compile Include="Core\Service\Chained1Tests.cs" />
    <Compile Include="Core\Service\MsuProviderTest.cs" />
    <Compile Include="Core\Service\MsiProviderTest.cs" />
    <Compile Include="Core\Service\ProgramsProviderTest.cs" />
    <Compile Include="Core\Service\ProviderTestTemplate.cs" />
    <Compile Include="Core\Service\Happy1ProviderTests.cs" />
    <Compile Include="Core\Service\PSChained1Test.cs" />
    <Compile Include="Core\Service\SoftwareIdentityResultTests.cs" />
    <Compile Include="Core\Service\UsingOneProvider.cs" />
    <Compile Include="Core\TestProviders\Chained1Provider.cs" />
    <Compile Include="Core\TestProviders\Happy1.cs" />
    <Compile Include="Core\TestProviders\Bad1.cs" />
    <Compile Include="Core\TestProviders\BlankProvider.cs" />
    <Compile Include="Core\TestProviders\SwidTestProvider.cs" />
    <Compile Include="Core\TestProviders\TestFileProvider.cs" />
    <Compile Include="Core\Host\HostTests.cs" />
    <Compile Include="Core\Service\PackageManagementServiceTests.cs" />
    <Compile Include="Sdk\Constants.cs" />
    <Compile Include="Sdk\ErrorCategory.cs" />
    <Compile Include="Sdk\Request.cs" />
    <Compile Include="Support\XmlExtensions.cs" />
    <Compile Include="Utility\DynamicInterface\NameMatching\NameTests.cs" />
    <Compile Include="Utility\DynamicInterface\ParameterCoercion\AdvancedDynamicInterfaceTests.cs" />
    <Compile Include="Support\Console.cs" />
    <Compile Include="Utility\DynamicInterface\ReturnTypeCoercion\RtTests.cs" />
    <Compile Include="Utility\DynamicInterface\Simple\DynamicInterfaceTest.cs" />
    <Compile Include="Utility\Misc\DynamicTests.cs" />
    <Compile Include="Core\HostTest.cs" />
    <Compile Include="Utility\Concpetual\MiscTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Support\CurrentTask.cs" />
    <Compile Include="Support\Event.cs" />
    <Compile Include="Support\XTask.cs" />
    <Compile Include="Tests.cs" />
    <Compile Include="Utility\Misc\ManifestLoadingTests.cs" />
    <Compile Include="Utility\Misc\SimpleTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Examples\TemplatePackageProvider.psm1" />
    <None Include="packages.config" />
    <None Include="provider.manifest" />
    <None Include="Providers\PSChained1Provider.psm1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Providers\TestChainingPackageProvider.psm1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Providers\TestPackageProvider.psm1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Providers\Providers.psd1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Providers\TestProviders.psm1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="xUnit.Tests.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Providers\Inbox\PowerShell.MetaProvider\PowerShell.MetaProvider.csproj">
      <Project>{ebeb46b5-3683-4d9f-939b-b1b2bbeea369}</Project>
      <Name>PowerShell.MetaProvider</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\PackageManagement\PackageManagement.csproj">
      <Project>{7044b856-6d51-498f-90f9-01f219909f79}</Project>
      <Name>PackageManagement</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\PowerShell.Module\PowerShell.Module.csproj">
      <Project>{f2133ac2-39dd-4321-a3b1-8bdbcdff743e}</Project>
      <Name>PowerShell.Module</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props'))" />
  </Target>
  <PropertyGroup>
    <PostBuildEvent>
$(SET_MT_EXE)

:Run the tool to add the manifest to the binary.
"%25MTEXE%25" -manifest $(ProjectDir)provider.manifest -outputresource:$(TargetPath);#101

if exist $(SolutionDir)deploy_debug.cmd (
   $(SolutionDir)deploy_debug.cmd
)</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>