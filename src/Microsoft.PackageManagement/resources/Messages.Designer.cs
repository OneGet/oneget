//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a New-StronglyTypedCsFileForResx funciton.
//     To add or remove a member, edit your .ResX file then rerun buildCoreClr.ps1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.PackageManagement.Internal.Resources {
using System;
using System.Reflection;

/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]

internal class Messages {

    private static global::System.Resources.ResourceManager resourceMan;

    private static global::System.Globalization.CultureInfo resourceCulture;

    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal Messages() {
    }

    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.PackageManagement.Internal.Resources.Messages", typeof(Messages).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }

    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to create specified folder '{0}'.
    /// </summary>
    internal static string CreatefolderFailed {
        get {
            return ResourceManager.GetString("CreatefolderFailed", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Dependent Package '{0}' failed to install.
    /// </summary>
    internal static string DependentPackageFailedInstall_dependency {
        get {
            return ResourceManager.GetString("DependentPackageFailedInstall_dependency", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Destination Path not set.
    /// </summary>
    internal static string DestinationPathNotSet {
        get {
            return ResourceManager.GetString("DestinationPathNotSet", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Failed to bootstrap provider '{0}'.
    /// </summary>
    internal static string FailedProviderBootstrap {
        get {
            return ResourceManager.GetString("FailedProviderBootstrap", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to File from '{0}' failed signature validation.
    /// </summary>
    internal static string FileFailedVerification {
        get {
            return ResourceManager.GetString("FileFailedVerification", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The expected hash '{0}' is not equal to the computed hash '{1}' from the file to be installed.
    /// </summary>
    internal static string HashNotEqual {
        get {
            return ResourceManager.GetString("HashNotEqual", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The filename specified is not valid.
    /// </summary>
    internal static string InvalidFilename {
        get {
            return ResourceManager.GetString("InvalidFilename", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The parameter '{0}' is required for this operation.
    /// </summary>
    internal static string MissingRequiredParameter {
        get {
            return ResourceManager.GetString("MissingRequiredParameter", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The package source '{0}' already exists with that provider.
    /// </summary>
    internal static string PackageSourceExists {
        get {
            return ResourceManager.GetString("PackageSourceExists", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to A protocol handler for scheme '{0}' is not available.
    /// </summary>
    internal static string ProtocolNotSupported {
        get {
            return ResourceManager.GetString("ProtocolNotSupported", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Specified version range is invalid. Minimum Version:{0} MaximumVersion:{1}.
    /// </summary>
    internal static string InvalidVersionRange {
        get {
            return ResourceManager.GetString("InvalidVersionRange", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Provider '{0}' failed to load.
    /// </summary>
    internal static string ProviderPluginLoadFailure {
        get {
            return ResourceManager.GetString("ProviderPluginLoadFailure", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to download the list of available providers. Check your internet connection.
    /// </summary>
    internal static string ProviderSwidtagUnavailable {
        get {
            return ResourceManager.GetString("ProviderSwidtagUnavailable", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Removal of the environment variable '{0}' requires elevation.
    /// </summary>
    internal static string RemoveEnvironmentVariableRequiresElevation {
        get {
            return ResourceManager.GetString("RemoveEnvironmentVariableRequiresElevation", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to A protocol handler for scheme '{0}' is not available.
    /// </summary>
    internal static string SchemeNotSupported {
        get {
            return ResourceManager.GetString("SchemeNotSupported", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Source location '{0}' is not valid for this provider.
    /// </summary>
    internal static string SourceLocationNotValid_Location {
        get {
            return ResourceManager.GetString("SourceLocationNotValid_Location", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to copy file to destination '{0}'.
    /// </summary>
    internal static string UnableToCopyFileTo {
        get {
            return ResourceManager.GetString("UnableToCopyFileTo", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to create shortcut for file '{0}' because it does not exist.
    /// </summary>
    internal static string UnableToCreateShortcutTargetDoesNotExist {
        get {
            return ResourceManager.GetString("UnableToCreateShortcutTargetDoesNotExist", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to download from URI '{0}' to '{1}'.
    /// </summary>
    internal static string UnableToDownload {
        get {
            return ResourceManager.GetString("UnableToDownload", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The package '{0}' failed to install. Please look at '{1}' file for details.
    /// </summary>
    internal static string PackageFailedInstallErrorLog {
        get {
            return ResourceManager.GetString("PackageFailedInstallErrorLog", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The package '{0}' failed to install.
    /// </summary>
    internal static string UnableToInstallPackage_package_reason {
        get {
            return ResourceManager.GetString("UnableToInstallPackage_package_reason", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to overwrite existing file '{0}'.
    /// </summary>
    internal static string UnableToOverwriteExistingFile {
        get {
            return ResourceManager.GetString("UnableToOverwriteExistingFile", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to remove existing file '{0}'.
    /// </summary>
    internal static string UnableToRemoveFile {
        get {
            return ResourceManager.GetString("UnableToRemoveFile", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to resolve package dependency -- package '{0}' not found.
    /// </summary>
    internal static string UnableToResolveDependency_dependencyPackage {
        get {
            return ResourceManager.GetString("UnableToResolveDependency_dependencyPackage", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to resolve package reference '{0}'.
    /// </summary>
    internal static string UnableToResolvePackage {
        get {
            return ResourceManager.GetString("UnableToResolvePackage", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to resolve package source '{0}'.
    /// </summary>
    internal static string UnableToResolveSource_NameOrLocation {
        get {
            return ResourceManager.GetString("UnableToResolveSource_NameOrLocation", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to uninstall package.
    /// </summary>
    internal static string UnableToUninstallPackage {
        get {
            return ResourceManager.GetString("UnableToUninstallPackage", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unknown Folder Id '{0}'.
    /// </summary>
    internal static string UnknownFolderId {
        get {
            return ResourceManager.GetString("UnknownFolderId", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to find package provider '{0}'.
    /// </summary>
    internal static string UnknownProvider {
        get {
            return ResourceManager.GetString("UnknownProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The archive file type is not supported.
    /// </summary>
    internal static string UnsupportedArchive {
        get {
            return ResourceManager.GetString("UnsupportedArchive", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The provider type is not supported.
    /// </summary>
    internal static string UnsupportedProviderType {
        get {
            return ResourceManager.GetString("UnsupportedProviderType", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Uri Scheme '{0}' is not supported.
    /// </summary>
    internal static string UriSchemeNotSupported_Scheme {
        get {
            return ResourceManager.GetString("UriSchemeNotSupported_Scheme", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to User declined to install untrusted package '{0}'.
    /// </summary>
    internal static string UserDeclinedUntrustedPackageInstall {
        get {
            return ResourceManager.GetString("UserDeclinedUntrustedPackageInstall", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to PowerShell meta provider initialization failed.
    /// </summary>
    internal static string FailedPowerShellMetaProvider {
        get {
            return ResourceManager.GetString("FailedPowerShellMetaProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The provider '{0}' is ignored because the other provider with the same name has already been imported from path '{1}'.
    /// </summary>
    internal static string DuplicatedProviderName {
        get {
            return ResourceManager.GetString("DuplicatedProviderName", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The specified file '{0}' is not found.
    /// </summary>
    internal static string FileNotFound {
        get {
            return ResourceManager.GetString("FileNotFound", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The specified provider '{0}' was not loaded because no valid type was found. The supported file types are '{1}'.
    /// </summary>
    internal static string InvalidFileType {
        get {
            return ResourceManager.GetString("InvalidFileType", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Failed to import the specified provider '{0}'. Please check if it is a valid PackageManagement provider.
    /// </summary>
    internal static string InvalidProvider {
        get {
            return ResourceManager.GetString("InvalidProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Loading an assembly '{0}'.
    /// </summary>
    internal static string LoadingAssembly {
        get {
            return ResourceManager.GetString("LoadingAssembly", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Loading a PowerShell module '{0}'.
    /// </summary>
    internal static string LoadingPowerShellModule {
        get {
            return ResourceManager.GetString("LoadingPowerShellModule", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The provider '{0}' has already been imported.
    /// </summary>
    internal static string ProviderImportedAlready {
        get {
            return ResourceManager.GetString("ProviderImportedAlready", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The provider {0} is successfully loaded.
    /// </summary>
    internal static string ProviderSuccessfullyLoaded {
        get {
            return ResourceManager.GetString("ProviderSuccessfullyLoaded", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Skipping previously processed provider '{0}'.
    /// </summary>
    internal static string SkipPreviousProcessedProvider {
        get {
            return ResourceManager.GetString("SkipPreviousProcessedProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The provider '{0}' has already been imported. Trying to import it again.
    /// </summary>
    internal static string ReImportProvider {
        get {
            return ResourceManager.GetString("ReImportProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Skipping previously processed assembly: {0}.
    /// </summary>
    internal static string SkippingProcessedAssembly {
        get {
            return ResourceManager.GetString("SkippingProcessedAssembly", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to import provider '{0}' under the current file path. The known provider search paths are '{1}.'
    /// </summary>
    internal static string UnableToImportProvider {
        get {
            return ResourceManager.GetString("UnableToImportProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The requiredVersion, minimumVersion or maximumVersion property applies to PowerShell modules. For the assembly providers, it is ignored.
    /// </summary>
    internal static string VersionPropertyWillbeIgnored {
        get {
            return ResourceManager.GetString("VersionPropertyWillbeIgnored", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Importing package provider '{0}'.
    /// </summary>
    internal static string ImportPackageProvider {
        get {
            return ResourceManager.GetString("ImportPackageProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Failed to re-import the provider '{0}'.
    /// </summary>
    internal static string FailToReImportProvider {
        get {
            return ResourceManager.GetString("FailToReImportProvider", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Unable to find package provider: {0}.
    /// </summary>
    internal static string ModuleWithVersionNotFound {
        get {
            return ResourceManager.GetString("ModuleWithVersionNotFound", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The provider is loaded from path: '{0}'.
    /// </summary>
    internal static string ProviderSuccessfullyLoadedFromLocation {
        get {
            return ResourceManager.GetString("ProviderSuccessfullyLoadedFromLocation", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Version {0} of the Package Provider {1} is already loaded. Since this is an assembly-based provider, we cannot load another version.
    /// </summary>
    internal static string AssemblyPackageProviderAlreadyLoaded {
        get {
            return ResourceManager.GetString("AssemblyPackageProviderAlreadyLoaded", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The specified assembly '{0}' in \ProviderAssemblies, should be installed in ProviderAssemblies\ProviderName\Version. Either delete the provider assembly from \ProviderAssemblies, or create \ProviderAssemblies\ProvidernName\Version, and then move the assembly there.
    /// </summary>
    internal static string ProviderNameAndVersionNotAvailableFromFilePath {
        get {
            return ResourceManager.GetString("ProviderNameAndVersionNotAvailableFromFilePath", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Multiple assemblies are found under path '{0}'. Please install a single provider assembly under each version folder.
    /// </summary>
    internal static string SingleAssemblyAllowed {
        get {
            return ResourceManager.GetString("SingleAssemblyAllowed", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to No match was found for the specified search criteria and provider name '{0}'. Try 'Get-PackageProvider -ListAvailable' to see if the provider exists on the system.
    /// </summary>
    internal static string NoMatchFoundForCriteria {
        get {
            return ResourceManager.GetString("NoMatchFoundForCriteria", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Wildcards in the '{0}' is not supported. Please specify a full provider name.
    /// </summary>
    internal static string InvalidParameter {
        get {
            return ResourceManager.GetString("InvalidParameter", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Administrator rights are required to install packages in '{0}'. Log on to the computer with an account that has Administrator rights, and then try again, or install '{1}' by adding "-Scope CurrentUser" to your command. You can also try running the Windows PowerShell session with elevated rights (Run as Administrator).
    /// </summary>
    internal static string InstallRequiresCurrentUserScopeParameterForNonAdminUser {
        get {
            return ResourceManager.GetString("InstallRequiresCurrentUserScopeParameterForNonAdminUser", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The format of the specified hash '{0}' is invalid.
    /// </summary>
    internal static string InvalidHashFormat {
        get {
            return ResourceManager.GetString("InvalidHashFormat", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Missing File xml tag.
    /// </summary>
    internal static string MissingFileTag {
        get {
            return ResourceManager.GetString("MissingFileTag", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Missing the hash attribute within the File xml tag.
    /// </summary>
    internal static string MissingHashAttribute {
        get {
            return ResourceManager.GetString("MissingHashAttribute", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The value of the hash xml attribute is empty.
    /// </summary>
    internal static string MissingHashContent {
        get {
            return ResourceManager.GetString("MissingHashContent", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The specified hash algorithm '{0}' is not supported. Please try using '{1}' instead.
    /// </summary>
    internal static string UnsupportedHashAlgorithm {
        get {
            return ResourceManager.GetString("UnsupportedHashAlgorithm", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Provider '{0}' is not respecting the responsiveness threshold in a timely fashion; Canceling request.
    /// </summary>
    internal static string ProviderNotResponsive {
        get {
            return ResourceManager.GetString("ProviderNotResponsive", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to "Provider '{0}' is not completing the request in the time allowed; Canceling request.
    /// </summary>
    internal static string ProviderTimeoutExceeded {
        get {
            return ResourceManager.GetString("ProviderTimeoutExceeded", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to Xml '{0}' is not a valid SoftwareIdentity swidtag. It needs to use '{1}' namespace.
    /// </summary>
    internal static string SwidTagXmlInvalidNameSpace {
        get {
            return ResourceManager.GetString("SwidTagXmlInvalidNameSpace", resourceCulture);
        }
    }

    /// <summary>
    ///   Looks up a localized string similar to The swidtag xml returned by the provider is not valid.
    /// </summary>
    internal static string SwidTagXmlNotValid {
        get {
            return ResourceManager.GetString("SwidTagXmlNotValid", resourceCulture);
        }
    }

}
}
